plugins {
    id 'java'
    id 'maven-publish'
}

group = 'com.omarnyte'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.json', name: 'json', version: '20180813'

    testCompile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.2.5'
    testCompile 'info.cukes:cucumber-java:1.2.4'
    testCompile 'info.cukes:cucumber-junit:1.2.4'
    testCompile 'junit:junit:4.12'
}

def corsPort = 7777
def corsDirectoryPath = System.getProperty("user.dir") + '/src/test/resources/corsFiles'
def defaultPort = 8888
def demoDirectoryPath = System.getProperty("user.dir") + '/src/test/resources/demoFiles'
def testDirectoryPath = System.getProperty("user.dir") + '/src/test/resources/testFiles'

def mainClasspath = "com/omarnyte/Main"

task startCorsServer(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = mainClasspath
    args "-port", corsPort, "-dir", corsDirectoryPath
}

task startDemoServer(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = mainClasspath
    args "-port", defaultPort, "-dir", demoDirectoryPath
}

task startTestServer(type: JavaExec) {
    classpath sourceSets.main.runtimeClasspath
    main = mainClasspath
    args "-port", defaultPort, "-dir", testDirectoryPath

}

task createLogsDirectory() {
    def logDir = new File(System.getProperty("user.dir") + '/logs')
    logDir.mkdir()
}

task createTestDirectory() {
    def testDir = testDirectoryPath
}

build.dependsOn(createTestDirectory, createLogsDirectory)

test {
    systemProperty 'PORT', defaultPort
    systemProperty 'TEST_DIRECTORY_PATH', testDirectoryPath

    testLogging {
        exceptionFormat = 'full'
        events = ["passed", "failed", "skipped", "standardOut", "standardError"]
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.omarnyte.Main'
    }
}

publishing {
    publications {
        httpServer(MavenPublication) {
            artifactId = 'http-server'
            from components.java

            pom {
                name = 'HTTP Server'
                description = 'A custom HTTP Server built in Java'
                url = 'https://github.com/omarnyte/http-server'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/omarnyte/http-server.git'
                    developerConnection = 'scm:git:ssh://git@github.com/omarnyte/http-server.git'
                    url = 'https://github.com/omarnyte/http-server'
                }
            }
        }
    }
    repositories {
        maven {
            url = "https://clojars.org/repo"
            credentials {
                username clojarsUsername 
                password clojarsPassword 
            }
        }
    }
}

